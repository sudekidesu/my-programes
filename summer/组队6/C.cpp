#include<iostream>
#include<cstdio>
#include<cstring>
#define shijiege std
using namespace shijiege;
long long num[2005];
string q[200005];
long long N[200005];
int main()
{
  ios::sync_with_stdio(false);
  while(1)
  {
    for(long long i=0;;i++)
    {
      cin>>q[i];
      if(q[i]=="END"||q[i]=="QUIT")
        break;
      if(q[i]=="NUM")
        cin>>N[i];
    }
    if(q[0]=="QUIT")
      break;
    long long n,T;
    cin>>T;
    while(T--)
    {
      cin>>num[1];
      n=1;
      long long err=0;
      for(long long i=0;q[i]!="END";i++)
      {
        if(q[i]=="NUM")
        {
          n++;
          num[n]=N[i];
        }
        if(q[i]=="POP")
        {
          if(n<1)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          n--;
        }
        if(q[i]=="INV")
        {
          if(n<1)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n]=-num[n];
        }
        if(q[i]=="DUP")
        {
          if(n<1)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          n++;
          num[n]=num[n-1];
        }
        if(q[i]=="SWP")
        {
          if(n<2)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          swap(num[n],num[n-1]);
        }
        if(q[i]=="ADD")
        {
          if(n<2||num[n-1]+num[n]>1000000000)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n-1]+=num[n];
          n--;
        }
        if(q[i]=="SUB")
        {
          if(n<2||num[n-1]-num[n]<-1000000000)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n-1]-=num[n];
          n--;
        }
        if(q[i]=="MUL")
        {
          if(n<2||num[n-1]*num[n]>1000000000)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n-1]*=num[n];
          n--;
        }
        if(q[i]=="DIV")
        {
          if(n<2||num[n]==0)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n-1]/=num[n];
          n--;
        }
        if(q[i]=="MOD")
        {
          if(n<2||num[n]==0)
          {
            err=1;
            printf("ERROR\n");
            break;
          }
          num[n-1]%=num[n];
          n--;
        }
      }
      if(n!=1&&err==0)
      {
        err=1;
        printf("ERROR\n");
      }
      if(err==0)
        printf("%lld\n",num[1]);
    }
    printf("\n");
  }
}
